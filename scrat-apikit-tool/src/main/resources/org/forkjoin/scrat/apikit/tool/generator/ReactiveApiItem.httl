<!--#set(ApiInfo m)-->
<!--#set(JavaClientApiWrapper utils)-->
<!--#set(TypeInfo type)-->
<!--#set(ApiMethodInfo method)-->
<!--#set(ApiMethodParamInfo param)-->
package $!{utils.getPack()};

import reactor.core.publisher.Mono;

import java.util.*;
import java.util.Map.Entry;
import java.util.concurrent.Future;


import org.forkjoin.scrat.apikit.client.*;

$!{utils.imports}


/**
$!{utils.comment(" * ")}
 */
public class $!{utils.name} {
    private ApiAdapter apiAdapter;

    public $!{utils.name}() {
    }

    public $!{utils.name}(ApiAdapter apiAdapter) {
        this.apiAdapter = apiAdapter;
    }

<!--#for(method : m.methodInfos)-->


   /**
   $!{utils.formatBaseComment(method.comment,"    * ")}
     *
   $!{utils.requestComment(method,"    * ")}
     */
    public Mono<$!{utils.resultData(method)}> $!{method.name}($!{utils.params(method)}) {
<!--        #for(param : method.params)-->
<!--            #if(!param.isRequired)-->
           $!{utils.toJavaTypeString(param.getTypeInfo(), false, true)} ${param.getName()} = ${param.getName()}Opt.orElse($!{utils.toValue(param)});
<!--            #end-->
<!--        #end-->

            RequestInfo _requestInfo = new RequestInfo();
            _requestInfo.setMethod("$!{method.type.name()}");
            _requestInfo.setUri("$!{method.url}");
            _requestInfo.setAccount($!{method.account});

<!--        #if(method.isHasPart)-->
                _requestInfo.setRequestType(RequestType.MULTIPART);
<!--        #else-->
                _requestInfo.setRequestType(RequestType.FORM);
<!--        #end-->
             _requestInfo.setType(_$!{method.index}Type);

<!--        #for(param : method.params)-->
<!--            #if(param.isPathVariable)-->
            _requestInfo.addPathVar("$!{param.getAnnotationName()}",$!{param.getName()});
<!--            #else(param.isFormParam)-->
            _requestInfo.addForm($!{param.getName()}::encode);
<!--            #else(param.isRequestParam || param.isRequestPartFile || param.isRequestPartField)-->
            _requestInfo.addFormParam("$!{param.getAnnotationName()}",$!{param.getName()});
<!--            #else(param.isRequestHeader)-->
            _requestInfo.addHeader("$!{param.getAnnotationName()}",$!{param.getName()});
<!--            #end-->
<!--        #end-->

            return apiAdapter.request(_requestInfo);
       }


<!--#end-->

    public void setApiAdapter(ApiAdapter apiAdapter) {
		this.apiAdapter = apiAdapter;
	}

	public ApiAdapter getApiAdapter() {
		return apiAdapter;
	}

<!--#for(method : m.methodInfos)-->
$!{utils.resultTypeString(method,"    ")}
<!--#end-->
}